#!/usr/bin/env node
!function(e){var t={};function i(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(n,s,function(t){return e[t]}.bind(null,s));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=2)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.Programm="Programm",e.IntDeclaration="IntDeclaration",e.ExpressionStmt="ExpressionStmt",e.AssignmentStmt="AssignmentStmt",e.Primary="Primary",e.Multiplicative="Multiplicative",e.Additive="Additive",e.Identifier="Identifier",e.IntLiteral="IntLiteral"}(t.ASTNodeType||(t.ASTNodeType={}))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.Plus="Plus",e.Minus="Minus",e.Star="Star",e.Slash="Slash",e.GE="GE",e.GT="GT",e.EQ="EQ",e.LE="LE",e.LT="LT",e.SemiColon="SemiColon",e.LeftParen="LeftParen",e.RightParen="RightParen",e.Assignment="Assignment",e.Int="Int",e.Identifier="Identifier",e.IntLiteral="IntLiteral"}(t.TokenType||(t.TokenType={}))},function(e,t,i){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),n(i(3)).default()},function(e,t,i){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(i(4)),r=n(i(5)),a=n(i(8));t.default=function(){const e=new r.default,t=new a.default(!0);process.stdout.write("verbose mode\n"),process.stdout.write("\n>"),s.default.createInterface({input:process.stdin}).on("line",i=>{try{const n=e.parse(i);process.stdout.write(t.execute(n).toString())}catch(e){process.stdout.write(e.toString())}finally{process.stdout.write("\n>")}})}},function(e,t){e.exports=require("readline")},function(e,t,i){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(0),r=i(1),a=n(i(6));t.default=class{primary(e){let t,i=e.peek();if(i)if(i.getType()===r.TokenType.IntLiteral)t=new o(s.ASTNodeType.IntLiteral,e.read().getText());else if(i.getType()===r.TokenType.Identifier)t=new o(s.ASTNodeType.Identifier,e.read().getText());else if(i.getType()===r.TokenType.LeftParen){if(e.read(),t=this.additive(e),!t)throw new Error("expecting an additive expression inside parenthesis");if(i=e.peek(),!i||i.getType()!==r.TokenType.RightParen)throw new Error("expecting right parenthesis");e.read()}return t}multiplicative(e){let t,i=this.primary(e),n=i;if(i)for(;(t=e.peek())&&t&&(t.getType()===r.TokenType.Star||t.getType()===r.TokenType.Slash);){t=e.read();const r=this.primary(e);if(!r)throw new Error("invalid multiplicative expression, expecting the right part");n=new o(s.ASTNodeType.Multiplicative,t.getText()),n.addChild(i),n.addChild(r),i=n}return n}additive(e){let t,i=this.multiplicative(e),n=i;if(i)for(;(t=e.peek())&&t&&(t.getType()===r.TokenType.Plus||t.getType()===r.TokenType.Minus);){t=e.read();const r=this.multiplicative(e);if(!r)throw new Error("invalid additive expression, expecting the right part");n=new o(s.ASTNodeType.Additive,t.getText()),n.addChild(i),n.addChild(r),i=n}return n}intDeclare(e){let t,i=e.peek();if(i&&i.getType()===r.TokenType.Int){if(e.read(),e.peek().getType()!==r.TokenType.Identifier)throw new Error("variable name expected");if(i=e.read(),t=new o(s.ASTNodeType.IntDeclaration,i.getText()),i=e.peek(),i&&i.getType()===r.TokenType.Assignment){e.read();const i=this.additive(e);if(!i)throw new Error("invalid variable initialization, expecting an expression");t.addChild(i)}if(t){if(i=e.peek(),!i||i.getType()!==r.TokenType.SemiColon)throw new Error("invalid statement, expecting semicolon");e.read()}}return t}expressionStatement(e){const t=e.getPosition();let i,n=this.additive(e);return n&&(i=e.peek(),i&&i.getType()===r.TokenType.SemiColon?e.read():(n=null,e.setPosition(t))),n}assignmentStatement(e){let t,i=e.peek();if(i&&i.getType()===r.TokenType.Identifier)if(i=e.read(),t=new o(s.ASTNodeType.AssignmentStmt,i.getText()),i=e.peek(),i&&i.getType()===r.TokenType.Assignment){e.read();const n=this.additive(e);if(!n)throw new Error("invalid assignment statement, expecting an expression");if(t.addChild(n),i=e.peek(),!i||i.getType()!=r.TokenType.SemiColon)throw new Error("invalid statement, expecting semicolon");e.read()}else e.unRead(),t=null;return t}prog(e){const t=new o(s.ASTNodeType.Programm,"simple script");let i;for(;e.peek();){if(i=this.intDeclare(e),i||(i=this.expressionStatement(e)),i||(i=this.assignmentStatement(e)),!i)throw new Error("unknow statement");t.addChild(i)}return t}parse(e){const t=new a.default;return this.prog(t.tokenize(e))}preTraverse(e){const t=[],i=[];return t.push(e),e.getChildren().forEach(e=>{i.push(...this.preTraverse(e))}),i.forEach(e=>{t.push(e)}),t}dumpAST(e,t="\t"){console.log(t+e.getType()+" "+e.getText()),e.getChildren().forEach(e=>{this.dumpAST(e,t+"\t")})}};class o{constructor(e,t){this.children=[],this.text="",this.nodeType=e,this.text=t}getParent(){return this.parent}getChildren(){return this.children}getType(){return this.nodeType}getText(){return this.text}addChild(e){this.children.push(e),e.parent=this}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(7),s=i(1);class r{constructor(e){this.text="",this.text=e}getType(){return this.type}getText(){return this.text}}class a{constructor(e){this.tokens=[],this.pos=0,this.tokens=e}read(){let e;return this.pos<this.tokens.length&&(e=this.tokens[this.pos++]),e}peek(){let e;return this.pos<this.tokens.length&&(e=this.tokens[this.pos]),e}unRead(){this.pos>0&&this.pos--}getPosition(){return this.pos}setPosition(e){this.pos=e}}t.default=class{constructor(){this.tokens=[]}isAlpha(e){return e>="a"&&e<="z"||e>="A"&&e<="Z"}isDigit(e){return e>="0"&&e<="9"}isBlank(e){return" "==e||"\t"==e||"\n"==e}initToken(e){this.token.text.length>0&&this.tokens.push(this.token),this.token=new r("");let t=n.DfaState.Initial;return this.isAlpha(e)?(t="i"==e?n.DfaState.Id_int1:n.DfaState.Id,this.token.type=s.TokenType.Identifier):this.isDigit(e)?(t=n.DfaState.IntLiteral,this.token.type=s.TokenType.IntLiteral):">"==e?(t=n.DfaState.GT,this.token.type=s.TokenType.GT):"="==e?(t=n.DfaState.Assignment,this.token.type=s.TokenType.Assignment):"+"==e?(t=n.DfaState.Plus,this.token.type=s.TokenType.Plus):"-"==e?(t=n.DfaState.Minus,this.token.type=s.TokenType.Minus):"*"==e?(t=n.DfaState.Star,this.token.type=s.TokenType.Star):"/"==e?(t=n.DfaState.Slash,this.token.type=s.TokenType.Slash):";"==e?(t=n.DfaState.SemiColon,this.token.type=s.TokenType.SemiColon):"("==e?(t=n.DfaState.LeftParen,this.token.type=s.TokenType.LeftParen):")"==e&&(t=n.DfaState.RightParen,this.token.type=s.TokenType.RightParen),t!=n.DfaState.Initial&&(this.token.text+=e),t}tokenize(e){this.token=new r(""),this.tokens=[];let t=n.DfaState.Initial;for(let i=0;i<e.length;i++){const r=e[i];switch(t){case n.DfaState.Initial:t=this.initToken(r);break;case n.DfaState.Id:this.isAlpha(r)||this.isDigit(r)?this.token.text+=r:t=this.initToken(r);break;case n.DfaState.GT:"="===r?(this.token.type=s.TokenType.GE,t=n.DfaState.GE,this.token.text+=r):t=this.initToken(r);break;case n.DfaState.Id_int1:"n"===r?(t=n.DfaState.Id_int2,this.token.text+=r):this.isDigit(r)||this.isAlpha(r)?(t=n.DfaState.Id,this.token.text+=r):t=this.initToken(r);break;case n.DfaState.Id_int2:"t"===r?(t=n.DfaState.Id_int3,this.token.text+=r):this.isDigit(r)||this.isAlpha(r)?(t=n.DfaState.Id,this.token.text+=r):t=this.initToken(r);break;case n.DfaState.Id_int3:this.isBlank(r)?(this.token.type=s.TokenType.Int,t=this.initToken(r)):this.isDigit(r)||this.isAlpha(r)?(t=n.DfaState.Id,this.token.text+=r):t=this.initToken(r);break;case n.DfaState.IntLiteral:this.isDigit(r)?this.token.text+=r:t=this.initToken(r);break;case n.DfaState.GE:case n.DfaState.Plus:case n.DfaState.Minus:case n.DfaState.Star:case n.DfaState.Slash:case n.DfaState.Assignment:case n.DfaState.LeftParen:case n.DfaState.RightParen:case n.DfaState.SemiColon:t=this.initToken(r)}}return this.token.text.length>0&&this.initToken(""),new a(this.tokens)}dump(e){let t;for(console.log("type\ttext");t=e.read();)console.log(t.getType()+"\t"+t.getText())}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Initial=0]="Initial",e[e.Id=1]="Id",e[e.Id_int1=2]="Id_int1",e[e.Id_int2=3]="Id_int2",e[e.Id_int3=4]="Id_int3",e[e.IntLiteral=5]="IntLiteral",e[e.GT=6]="GT",e[e.GE=7]="GE",e[e.Assignment=8]="Assignment",e[e.Plus=9]="Plus",e[e.Minus=10]="Minus",e[e.Star=11]="Star",e[e.Slash=12]="Slash",e[e.SemiColon=13]="SemiColon",e[e.LeftParen=14]="LeftParen",e[e.RightParen=15]="RightParen"}(t.DfaState||(t.DfaState={}))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(0);t.default=class{constructor(e=!1){this.verbose=!1,this.variables={},this.verbose=e}execute(e,t="\t"){let i=0;switch(this.verbose&&console.log(t+"Executing: "+e.getType()),e.getType()){case n.ASTNodeType.Programm:e.getChildren().forEach(e=>{i=this.execute(e,t+"\t")});break;case n.ASTNodeType.Additive:{const[n,s]=e.getChildren(),r=this.execute(n,t+"\t"),a=this.execute(s,t+"\t");i="+"===e.getText()?r+a:r-a;break}case n.ASTNodeType.Multiplicative:const[s,r]=e.getChildren(),a=this.execute(s,t+"\t"),o=this.execute(r,t+"\t");i="*"===e.getText()?a*o:a/o;break;case n.ASTNodeType.IntLiteral:i=+e.getText();break;case n.ASTNodeType.Identifier:{const t=e.getText();if(void 0===this.variables[t])throw new Error("unknown variable: "+t);i=this.variables[t];break}case n.ASTNodeType.AssignmentStmt:case n.ASTNodeType.IntDeclaration:const l=e.getText();if(e.getType()===n.ASTNodeType.AssignmentStmt&&!this.variables[l])throw new Error("unknown variable: "+l);let p=0;const h=e.getChildren();if(h.length>0){const e=h[0];i=this.execute(e,t+"\t"),p=i}this.variables[l]=p}return this.verbose&&console.log(t+"Result: "+i),i}}}]);